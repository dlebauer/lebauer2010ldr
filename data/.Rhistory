Rserve()
install.packages("ggmap")
example(get_map)
library(ggmap)
sessionInfo()
library(devtools)
ls()
library(devtools)
install_github("climate-utils", "dlebauer")
sweave(system.file("global_vpd_example.Rnw", package = "ClimateUtils"))
Sweave(system.file("global_vpd_example.Rnw", package = "ClimateUtils"))
library(BioCro)
library(BIOCRO)
x <- read.csv("/Users/dlebauer/Desktop/manptime.csv")
library(data.table)
x <- data.table(x)
head(x)
x[p.kg.ha == 0,list(n.kg.ha), by = list(latitude, longitude)]
dim(x)
n <- x[p.kg.ha == 0,list(n.kg.ha), by = list(latitude, longitude)]
n[,hist(n.kg.ha/10)]
n[,hist(n.kg.ha/10, breaks = 100)]
library(ggplot2)
ggplot(data = n, aes(n.kg.ha/10)) + geom_hist()
ggplot(data = n, aes(n.kg.ha/10)) + geom_histogram()
ggplot(data = n, aes(n.kg.ha/10)) + geom_histogram() + scale_x_log10()
ggplot(data = n, aes(n.kg.ha/10)) + geom_histogram() + scale_x_log10() + theme_bw()
ggplot(data = n, aes(n.kg.ha/10)) + geom_histogram(fill = white) + scale_x_log10() + theme_bw()
ggplot(data = n, aes(n.kg.ha/10)) + geom_histogram(fill = "white") + scale_x_log10() + theme_bw()
ggplot(data = n, aes(n.kg.ha/10)) + geom_histogram(color = "black", fill = "white") + scale_x_log10() + theme_bw()
ggplot(data = n, aes(n.kg.ha/10)) + geom_histogram(color = "black", fill = "white", binwidth = 1) + scale_x_log10() + theme_bw()
ggplot(data = n, aes(n.kg.ha/10)) + geom_histogram(color = "black", fill = "white", binwidth = 0.1) + scale_x_log10() + theme_bw()
n[,hist(nlevel = n.kg.ha/10, breaks = 100)]
dim(x)
head(x)
setnames(x, old="n.kg.ha", new = "nlevel")
head(x)
head(n)
n$nlevel <- (n$n.kg.ha/10)
ggplot(data = n, aes(nlevel)) + geom_histogram(color = "black", fill = "white", binwidth = 0.1) + scale_x_log10() + theme_bw() + ggtitle("Frequency of distinct N addition treatments (g/m2) \n used in studies from LeBauer and Treseder 2008")
x[nlevel == 1]
x[nlevel < 1]
hist(x$nlevel)
range(x$nlevel)
x[nlevel < 1 & nlevel > 0]
x[nlevel < 1.1 & nlevel > 0]
x[nlevel < 10 & nlevel > 0]
n[nlevel < 1 & nlevel > 0]
duplicated(n)
n <- n[!duplicated(n)]
n[nlevel < 1 & nlevel > 0]
ggplot(data = n, aes(nlevel)) + geom_histogram(color = "black", fill = "white", binwidth = 0.1) + scale_x_log10() + theme_bw() + ggtitle("Frequency of distinct N addition treatments (g/m2) \n used in studies from LeBauer and Treseder 2008")
n[nlevel < = 1 & nlevel > 0]
n[nlevel <= 1 & nlevel > 0]
n[nlevel <= 2 & nlevel > 0]
n[nlevel <= 2 & nlevel > 1]
nrow(n)
n[nlevel < 2 & nlevel > 1]
n[nlevel < 2 & nlevel > 0]
x
n[nlevel < 2 & nlevel > 0]
ggplot(data = n, aes(nlevel)) + geom_histogram(color = "black", fill = "white", binwidth = 0.1) + scale_x_log10() + theme_bw() + ggtitle("Frequency of distinct N addition treatments (g/m2) \n used in studies from LeBauer and Treseder 2008")
library(lubridate)
month(1)
month(x) <- 1
x <- NA
month(x) <- 1
x
month(x)
get_map("world", projection = mapprojecton(robinson))
# using ggmap::get.map()
get_map("world", projection = mapprojecton(robinson))
f1 <- function(k)abs(min(0,b))
f2 <- function(k)-min(0,b)
f1(1)== f2(1)
f2 <- function(k)-min(0,k)
f1 <- function(k)abs(min(0,l))
f1 <- function(k)abs(min(0,k))
f1(1)== f2(1)
f1(-1)== f2(-1)
f1(0)== f2(0)
x <- read.csv("../Downloads/miscanthus_yield_grid.csv")
plot(x$lon, x$lat)
x
head(x)
x <- read.csv("../Downloads/miscanthus_yield_grid.csv", header=2)
x
x <- read.csv("../Downloads/miscanthus_yield_grid.csv", comment.char="#")
head(x)
plot(x$lon, x$lat)
plot(x$lon, x$lat, cex = 1)
plot(x$lon, x$lat, cex = 0.1)
plot(x$lon, x$lat, cex = 0.3)
plot(unique(x$lon), cex = 0.3)
plot(unique(x$lat), cex = 0.3)
hist(unique(x$lat), cex = 0.3)
hist(unique(x$lat), cex = 0.3, breaks = sqrt(nrow(x)))
x <- read.csv("../Downloads/miscanthus_yield_grid.csv", header=1)
x
x <- read.csv("../Downloads/willow_yield_county.csv", comment.char="#")
y <- read.csv("../Downloads/willow_yield_county.csv", comment.char="#")
colnames(x)
colnames(y)
dim(x)
dim(y)
hist(x$county_fips - y$county_fips)
range(x$county_fips - y$county_fips)
y <- read.csv("../Downloads/poplar_yield_county.csv", comment.char="#")
hist(x$county_fips - y$county_fips)
z <- merge(x, y, by = "county_fips")
dim(x)
dim(y)
dim(z)
str(x)
str(y)
library(data.table)
x <- data.table(x)
y <- data.table(y, key = "county_fips")
x <- data.table(x, key = "county_fips")
a <- x[y[,poplaryield]]
str(y)
setnames(y, "yield", "poplaryield")
a <- x[y[,poplaryield]]
dim(a)
dim(x)
dim(y)
a <- y[,poplaryield]x
a <- y[,poplaryield][x]
z <- merge(x,y)
z <- merge(y,x)
y[!county_fips %in% x$county_fips,]
y[!(county_fips %in% x$county_fips),]
x[!(county_fips %in% y$county_fips),]
y[x,]
y[x[,willowyield],]
y[x[,list(county_fips, willowyield)],]
y[x,]
x[y,]
merge(x,y,by = "county_fips")
merge(y,x,by = "county_fips")
x[y[,county_fips]]
z <- x[y[,county_fips]]
write.csv("../Downloads/willow_poplar_yield_county.csv")
write.csv(z,"../Downloads/willow_poplar_yield_county.csv")
z
z <- x[,list(state, county, abbrev, lat, lon, state_fips, county_fips)]y[,list(county_fips, poplaryield)]
str(x)
str(y)
setkey(x, "fips")
setkey(y,"fips")
x[y]
x[y[,poplaryield]]
x[y[,list(fips, poplaryield)]]
z <- x[y[,list(fips, poplaryield)]]
write.csv(z,"../Downloads/willow_poplar_yield_county.csv")
library(rnoaa)
ash_p <- rnorm(1000, 0.007, 0.002)
ash_mass <- rnorm(1000, 3.5, 0.01)
ash_p_conc <- rnorm(1000, 0.007, 0.002)
ash_p <- ash_p_conc * ash_mass
hist(ash_p)
mean(ash_p)
sd(ash_p)
par(mfrow = c(3,1))
hist(ash_p_conc)
hist(ash_mass)
hist(ash_p)
library(metRology)
source('C:/Users/dlebauer/Downloads/examples_for_R.R', echo=TRUE)
?GUM.validate
GUM
print(GUM.output)
print(list(AACL=GUMv.output))
GUMv.output <- GUM.validate(var.name=c("X1","X2"),
x.i=c(X1,X2),
u.i=c(u1,u2),
nu.i=c(nu1,nu2),
type=c("A","A"),
distribution=c("Normal","Uniform"),
measurement.fnc="X1-X2")
# Print results
print(GUM.output)
print(list(AACL=GUMv.output))
GUMv.output <- GUM.validate(var.name=c("X1","X2"),
x.i=c(X1,X2),
u.i=c(u1,u2),
nu.i=c(nu1,nu2),
type=c("A","A"),
distribution=c("Uniform","Uniform"),
measurement.fnc="X1-X2")
# Print results
print(GUM.output)
print(list(AACL=GUMv.output))
library(BioCro)
photoParms()
canopyParms()
plot(0:100, exp(-0.1*0:100))
plot(exp(-0.1*0:100), 0:100)
plot(exp(-0.1*0:100), 0:100, type = 'l')
plot(1-exp(-0.1*0:100), 0:100, type = 'l')
plot(1-exp(-0.5*0:100), 0:100, type = 'l')
plot(1-exp(-0.01*0:100), 0:100, type = 'l')
plot(1-exp(-0.01*0:100/100), 0:100/100, type = 'l')
plot(1-exp(-0.1*0:100/100), 0:100/100, type = 'l')
plot(2000*(1-exp(-0.1*0:100/100)), 0:100/100, type = 'l')
plot(2000*(exp(-0.1*0:100/100)), 0:100/100, type = 'l')
plot(2000*(exp(-0.1*0:100)), 0:100, type = 'l')
plot(2000*(1-exp(-0.1*0:100)), 0:100, type = 'l')
runif(1)
rbinom(1, 2, 0.1)
?rmultinom
rmultinom(10, size = 12, prob = c(0.1,0.2,0.8))
rmultinom(1, size = 12, prob = c(0.1,0.2,0.8))
rmultinom(1, size = 3, prob = c(0.1,0.2,0.8))
rmultinom(1, size = 1, prob = c(0.1,0.2,0.8))
rmultinom(1, size = 1, prob = c(0.1,0.9))
?rlnorm
setwd(dir = "C:/Users/dlebauer/Documents/GitHub/lebauer2010ldr/R/" )
library(nlme)
library(lattice)
library('doBy')
library('SIN')
library('alr3')
dat.mono <-
read.csv ( "dat.mono.csv", header = TRUE )
dir()
setwd(dir = "C:/Users/dlebauer/Documents/GitHub/lebauer2010ldr/data/" )
dat.mono <-
read.csv ( "dat.mono.csv", header = TRUE )
bg.i <- summaryBy( bg ~ iso.let,
na.rm=TRUE,
data=dat.mono,
FUN=c(mean,sd)
)
help.search("currFun")
ppo.i <-  summaryBy( ppo ~ iso.let,
na.rm=TRUE,
data=dat.mono,
)
FUN=c(mean,sd)
ppo.i
nag.i <-  summaryBy( nag ~ iso.let,
na.rm=TRUE,
data=dat.mono,
FUN=c(mean,sd)
)
nag.i <-  summaryBy( nag ~ iso.let,
na.rm=TRUE,
data=dat.mono,
FUN=c(mean,sd)
)
ppo.i <-  summaryBy( ppo ~ iso.let,
na.rm=TRUE,
data=dat.mono,
FUN=c(mean,sd)
)
nag.i <-  summaryBy( nag ~ iso.let,
na.rm=TRUE,
data=dat.mono,
FUN=c(mean,sd)
)
nag.i <-  summaryBy( nag ~ iso.let,
na.rm=TRUE,
data=dat.mono,
FUN=c('mean','sd')
)
dat.enz <-
read.csv  ( "Microcosm_enz_final.csv", header = TRUE )
dat.dcdt <-
read.csv ("Microcosm_dcdt_final.csv", header = TRUE)
dat.iso.id <-
read.csv ( "isolate.id.csv", header = TRUE )
foo <- merge ( dat.enz , dat.dcdt , by = "id")
dat.all <- merge (dat.iso.id, foo , by = "id")
dat.all$Dt <- as.numeric (dat.all$Dt)
dat.all$Dt.2 <- as.numeric (dat.all$Dt.2)
dat.all$obs.c.tot<-as.numeric(dat.all$obs.c.tot)
dat.all$c.total <- dat.all$obs.c.tot/dat.all$g_litter
dat.all$substrate <- dat.all$substrate.x
write.csv ( dat.all, "dat.all.csv" )
head(dat.all)
dat.live <- dat.all[dat.all$obs.c.tot>20,]
spp <- cbind (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P)
attach ( dat.live )
spp <- cbind (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P)
#M########
# nsp
# total species in a given row
nsp <- rowSums( spp ,  na.rm = FALSE, dims = 1)
#df#############
# dat.mono2
# bring names in to second set of monoculture data
sp.code <- unique(dat.mono1 [,c(1,3)]) # create matrix of letter / name combo
dat.mono2 <- merge ( dat.all[which (spdiversity==1),],sp.code) #monoculture data from expt2
dat.modo1
dat.mono1
head(dat.live)
d <- read.csv("dat.live.csv")
dir()
write.csv ( dat.live, "dat.live.csv" )
dir()
d <- read.csv("dat.live.csv")
head(dat.live)
str(dat.live)
library(dplyr)
install.packages('dplyr')
library(dplyr)
require(dplyr)
install.packages("Rcpp")
require(dplyr)
?dplyr
str(dat.live)
d <- select(dat.live, id, substrate, spdiversity, Dt, g_litter, obs.c.tot)
d <- dat.live %>%
select(id, substrate.x, bg, ppo, spdiversity, Dt, Dmax, g_litter, obs.c.tot) %>%
mutate(substrate = substrate.x, dt = Dt, dmax = Dmax)
d
head(dt)
head(d)
d <- dat.live %>%
select(id, s = substrate.x, bg, ppo, spdiversity, Dt, Dmax, g_litter, obs.c.tot)
head(d)
d <- dat.live %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, dt = Dt, dmax = Dmax, g_litter, obs.c.tot)
d <-
select(dat.live, id, substrate = substrate.x, bg, ppo, spdiversity, dt = Dt, dmax = Dmax, g_litter, obs.c.tot)
head(d)
library(ggplot2)
ggplot(data = d, aes(x = spdiversity)) + geom_point(aes(y=bg)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = dt)) + geom_point(aes(y=bg)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = dt, color = spdiversity)) + geom_point(aes(y=bg)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = dt, color = as.factor(spdiversity))) + geom_point(aes(y=bg)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = dt, color = spdiversity)) + geom_point(aes(y=bg)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = dt, color = spdiversity)) + geom_point(aes(y=ppo)) + facet_wrap(~substrate)
plot(d$dt)
hist(d$dt)
head(d)
ggplot(data = d, aes(x = dt, color = spdiversity)) + geom_point(aes(y=g_litter)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = dt, color = spdiversity)) + geom_point(aes(y=obs.c.tot)) + facet_wrap(~substrate)
select(dat.live, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=bg)) + facet_wrap(~substrate)
d <-   select(dat.live, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=bg)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=obs.c.tot)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = time)) + geom_smooth(aes(y=obs.c.tot, group = spdiversity)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = time)) + geom_smooth(aes(y=obs.c.tot, color = spdiversity)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = time)) + geom_smooth(aes(y=obs.c.tot, group = spdiversity)) + facet_wrap(~substrate)
d <- read.csv("dat.all.csv")
dat <- read.csv("dat.all.csv")
d <-   select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=bg)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = time)) + geom_smooth(aes(y=obs.c.tot, group = spdiversity)) + facet_wrap(~substrate)
hist(d$obs.c.tot)
hist(d$obs.c.tot, breaks = 100, xlim = c(-10,10))
hist(d$obs.c.tot, breaks = 1000, xlim = c(-30,30))
hist(dat$obs.c.tot,
breaks = 1000, xlim = c(-30,30))
hist(dat$obs.c.tot,
breaks = 1000, xlim = c(-30,100))
d <-   select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>% filter(dt = 0 | obs.c.tot > 40)
ggplot(data = d, aes(x = time)) + geom_smooth(aes(y=obs.c.tot, group = spdiversity)) + facet_wrap(~substrate)
str(d)
library(data.table)
d <- data.table(d)
d[,sum(obs.c.tot), by = 'spdiversity,substrate']
d[,sum(obs.c.tot/g_litter), by = 'spdiversity,substrate']
d[,hist(obs.c.tot)]
library(udunits2)
d[,sum(ud.convert(obs.c.tot, "ug", "g")/g_litter), by = 'spdiversity,substrate']
d[,sum(ud.convert(obs.c.tot, "ug", "g")/g_litter)/length(obs.c.tot), by = 'spdiversity,substrate']
d[,hist(obs.c.tot)]
d[,sum(ud.convert(obs.c.tot, "ug", "mg")/g_litter)/length(obs.c.tot), by = 'spdiversity,substrate']
str(d)
d <-   select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, c = g_litter - ud.convert(obs.c.tot, "ug", "g") %>% filter(dt = 0 | obs.c.tot > 40)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=bg)) + facet_wrap(~substrate)
d <-   select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>% filter(dt = 0 | obs.c.tot > 40)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=bg)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = time)) + geom_smooth(aes(y=obs.c.tot, group = spdiversity)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=c)) + facet_wrap(~substrate)
d <-   select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>% filter(dt = 0 | obs.c.tot > 40)
dat <- read.csv("dat.all.csv")
d <-   select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>% filter(dt = 0 | obs.c.tot > 40)
str(dat)
d <-   select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>% filter(dt = 0 | obs.c.tot > 40)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=c)) + facet_wrap(~substrate)
d <-   select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot)
d <-   select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>% filter(dt = 0 | obs.c.tot > 40)
d <-  dat %>%
filter(dt = 0 | obs.c.tot > 40) %>%
select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g"))
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=c)) + facet_wrap(~substrate)
d <-  dat %>%
filter(dt = 0 | obs.c.tot > 40) %>%
select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g"))
d <-  dat %>%
select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g"))
d <-  dat %>%
filter(dt = 0 | obs.c.tot > 40) %>%
select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot)
dat %>%
select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot)
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>%
filter(dt = 0 | obs.c.tot > 40)
d <-  dat %>%
select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>%
filter(dt = 0 | obs.c.tot > 40)
d <-  dat %>%
select(dat, id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>%
# mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>%
filter(dt = 0 | obs.c.tot > 40)
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>%
filter(dt = 0 | obs.c.tot > 40)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=c)) + facet_wrap(~substrate)
dat <- read.csv("dat.live.csv")
library(ggplot2)
library(dplyr)
library(udunits2)
hist(dat$obs.c.tot,
breaks = 1000, xlim = c(-30,100))
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>%
filter(dt = 0 | obs.c.tot > 40)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=c)) + facet_wrap(~substrate)
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>%
filter(dt = 0)
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>%
filter(dt == 0 | obs.c.tot > 40)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=c)) + facet_wrap(~substrate)
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g"))
d <- data.table(dat)
d[dt == 0 | obs.c.tot > 40]
str(d)
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g"))
str(d)
d <- data.table(d)
d[dt == 0 | obs.c.tot > 40]
str(d)
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>%
filter(time == 0 | obs.c.tot > 40)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_point(aes(y=c)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_line(aes(y=c)) + facet_wrap(~substrate)
str(d)
ggplot(data = d, aes(x = time, color = spdiversity)) + geom_line(aes(y=c, group = id)) + facet_wrap(~substrate)
ggplot(data = d, aes(x = time)) + geom_line(aes(y=c, group = id)) + facet_wrap(~substrate)
unique(d$id)
dim(d)
dim(dat)
dat <- read.csv("dat.all.csv")
library(dplyr)
dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot, starts_with("d"))
dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot, matches("d[ct]\."))
dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot, matches("d[ct]\\."))
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot, matches("d[ct]\\."))
str(d)
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot, matches("[td][c]\\."))
strd
str(d)
dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot, matches("[td][tc]\\."))
dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot, matches("t[19]\\."))
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot, matches("t[19]\\."))
str(d)
dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot, matches("t[12345679]")
)
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot, matches("t[123456789]"))
str(d)
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot, matches("t[123456789]"), matches("dc\\."))
str(d)
d <-  dat %>%
select(id, substrate = substrate.x, bg, ppo, spdiversity, time = Dt, dmax = Dmax, g_litter, obs.c.tot, matches("t[123456789]"), matches("dc\\.")) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>%
filter(time == 0 | obs.c.tot > 40)
d <-  dat %>%
select(id, substrate = substrate.x, spdiversity, time = Dt, g_litter, matches("t[123456789]"), matches("dc\\.")) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>%
filter(time == 0 | obs.c.tot > 40)
d <-  dat %>%
select(id, substrate = substrate.x, spdiversity, time = Dt, g_litter, obs.c.tot, matches("t[123456789]"), matches("dc\\.")) %>%
mutate(c = g_litter - ud.convert(obs.c.tot, "ug", "g")) %>%
filter(time == 0 | obs.c.tot > 40)
d %>% gather(key, -id, -substrate, -spdiversity, -time, -g_litter )
library(tidyr)
install.packages("tidyr")
d %>% gather(key, -id, -substrate, -spdiversity, -time, -g_litter )
library(tidyr)
